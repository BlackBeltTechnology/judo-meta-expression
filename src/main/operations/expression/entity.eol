import "../data/entity.eol";

@cached
operation EXPR!SingleEntitySelectorExpression prepare() : JUDOPSM!Type {
	if (not self.entityType.isDefined()) {
		self.entityType = self.entitySetExpression.prepare();
	}
	
	return self.entityType;
}

@cached
operation EXPR!EntityNavigationExpression prepare() : JUDOPSM!Type {
	if (not self.entityType.isDefined() and self.entityExpression.isDefined()) {
		var base = self.entityExpression.prepare();

		var ref = base.getReferenceByName(self.singleReferenceName);
        
        if (ref.isDefined()) {
            self.entityType = ref.target;
        } else {
            ("Reference named " + self.singleReferenceName + " not found in entity " + self.name + " (or its supertypes)").println();
        }
	}
	
	return self.entityType;
}

@cached
operation EXPR!EntityFilterExpression prepare() : JUDOPSM!Type {
	if (not self.entityType.isDefined() and self.entityExpression.isDefined()) {
	   var base = self.entityExpression.prepare();
	}
	
	throw "Not implemented yet";
}


@cached
operation EXPR!Lambda prepare() : JUDOPSM!Type {
    if (not self.entityType.isDefined()) {
        var entityExpression = EXPR!EntityFilterExpression.all.selectOne(e | e.filter = self);
        var entitySetExpression = EXPR!EntitySetFilterExpression.all.selectOne(e | e.filter = self);
        
        entityExpression.println("EXPR: ");
        entitySetExpression.println("SET EXPR: ");
        
        if (entityExpression.isDefined()) {
            self.entityType = entityExpression.prepare();
        } else if (entitySetExpression.isDefined()) {
            self.entityType = entitySetExpression.prepare();
        } else {
            ("Could not detect type of lambda expression: " + self.name).println();
        }
    }
    
    return self.entityType;
}

@cached
operation EXPR!EntityVariableReference prepare() : JUDOPSM!Type {
    if (not self.entityType.isDefined() and self.variable.isDefined()) {
        self.entityType = self.variable.prepare();
    }
    
    return self.entityType;
}