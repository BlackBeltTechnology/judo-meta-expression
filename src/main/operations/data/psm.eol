@cached
operation EXPR!ElementName getNamespace() : JUDOPSM!Namespace {
    var ns : JUDOPSM!Namespace;
        
    for (nsName in self.namespace.split("\\s*\\::\\s*")) {
        if (ns.isDefined()) {
            ns = ns.packages.selectOne(p | p.name = nsName);
        } else {
            ns = JUDOPSM!Model.all.selectOne(p | p.name = nsName);
        }
    }
    
    if (not ns.isDefined()) {
        throw "Namespace not found: " + self.namespace;
    }
    
    return ns;
}

@cached
operation EXPR!ElementName getEntityType() : JUDOPSM!EntityType {
    return self.getNamespace().entityTypes.selectOne(et | et.name = self.name);
}

@cached
operation EXPR!ElementName getEnumerationType() : JUDOPSM!EntityType {
    return self.getNamespace().dataTypes.selectOne(t | t.name = self.name);
}

operation JUDOPSM!EntityType getReferenceType(name: String) : JUDOPSM!EntityType {
    var ref = self.references.selectOne(r | r.name = name);
    
    if (not ref.isDefined()) {
        // checking super types recursively
        var super = self.superEntityTypes;
        while (super.isDefined() and not super.isEmpty()) {
            var super2 = new Sequence;
            for (s in super) {
                ref = s.references.selectOne(r | r.name = name);
                
                if (ref.isDefined()) {
                    return ref.target;
                }
                
                super2.addAll(s.superEntityTypes);
            }
            super = super2;
        }
    } else {
        return ref.target;
    }
    
    throw "Reference named " + name + " of entity type " + self.name + " not found";
}

operation JUDOPSM!EntityType getAttributeType(name: String) : JUDOPSM!DataType {
    var attr = self.attributes.selectOne(r | r.name = name);
    
    if (not attr.isDefined()) {
        // checking super types recursively
        var super = self.superEntityTypes;
        while (super.isDefined() and not super.isEmpty()) {
            var super2 = new Sequence;
            for (s in super) {
                attr = s.attributes.selectOne(r | r.name = name);
                
                if (attr.isDefined()) {
                    return attr.dataType;
                }
                
                super2.addAll(s.superEntityTypes);
            }
            super = super2;
        }
    } else {
        return attr.dataType;
    }
    
    throw "Attribute named " + name + " of entity type " + self.name + " not found";
}

@cached
operation JUDOPSM!DataType isNumeric() : Boolean {
    return self.isKindOf(JUDOPSM!Numeric);
}

@cached
operation JUDOPSM!DataType isBoolean() : Boolean {
    return self.isKindOf(JUDOPSM!Boolean);
}

@cached
operation JUDOPSM!DataType isString() : Boolean {
    return self.isKindOf(JUDOPSM!String);
}

@cached
operation JUDOPSM!DataType isEnumeration() : Boolean {
    return self.isKindOf(JUDOPSM!Enumeration);
}

operation JUDOPSM!Enumeration contains(memberName : String) : Boolean {
    return self.members.selectOne(m | m.name = memberName).isDefined();
}

operation JUDOPSM!Enumeration getName() : String {
    return self.name;
}
