context EXPR!LogicalAttribute {
    constraint AttributeTypeIsBoolean {
        guard: self.satisfiesAll("AttributeTypeIsDefined") and self.objectExpression.satisfiesAll("ObjectTypeIsDefined")
        
        check: self.getAttributeType().isBoolean()
        message: "Attribute type of " + self.attributeName + " of object type " + self.objectExpression.getObjectType().getName() + " is not boolean"
    }
}

context EXPR!ContainsExpression {
    constraint CollectionAndObjectOfContainsOperationAreCompatible {
        guard: self.collectionExpression.satisfiesAll("CollectionTypeIsDefined") and self.objectExpression.satisfiesAll("ObjectTypeIsDefined")
        
        check: self.collectionExpression.getObjectType() == self.objectExpression.getObjectType()
            or self.collectionExpression.getObjectType().getSuperTypes().contains(self.objectExpression.getObjectType())
            or self.objectExpression.getObjectType().getSuperTypes().contains(self.collectionExpression.getObjectType())
        message: "Types of collection and object are not compatible"  
    }
}
