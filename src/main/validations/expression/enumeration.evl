context EXPR!EnumerationAttribute {
    constraint ValidType {
        check: self.getAttributeType().isEnumeration()
        message: "Attribute type is not enumeration"
    }
}

context EXPR!EnumerationComparison {
    guard: self.left.getEnumeration().isDefined() and self.right.getEnumeration().isDefined()
    
    constraint ValidMember {
	    check: self.left.getEnumeration() == self.right.getEnumeration()
	    message: "Enumerations are not matching"
    }
}

context EXPR!EnumerationComparison {
    guard: self.right.getEnumeration().isDefined() and self.left.isTypeOf(EXPR!Literal)
    
    constraint ValidMember {
        check: self.right.getEnumeration().contains(self.left.value)
        message: "Enumeration " + self.right.getEnumeration().getName() + " (right side) does not contain literal: " + self.left.value + " (left side)"
    }
}

context EXPR!EnumerationComparison {
    guard: self.left.getEnumeration().isDefined() and self.right.isTypeOf(EXPR!Literal)
    
    constraint ValidMember {
        check: self.left.getEnumeration().contains(self.right.value)
        message: "Enumeration " + self.left.getEnumeration().getName() + " (left side) does not contain literal: " + self.right.value + " (right side)"
    }
}
